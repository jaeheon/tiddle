//Generated by Tiddle, UC Santa Cruz
/*
rd 1 x
wr 2 x

*/
package mypackage;
import java.util.concurrent.BrokenBarrierException;
import java.util.concurrent.CyclicBarrier;

public class Example {
  static int x = 0;
  static CyclicBarrier cb = new CyclicBarrier(2);
  static CyclicBarrier cc = new CyclicBarrier(2);
  static int counter = 0;
  static int numThreads = 2;
  
  static public void await(CyclicBarrier c) throws BrokenBarrierException, InterruptedException {
    c.await();
  }
  
  
  public static void main(String[] args) {
    final Thread t2 = new Thread() {
      public void run() {
        try {
          int _z = 0;
          await(cc);
          await(cb);
          await(cc);
          x = 1;
          await(cb);
        }
        catch (InterruptedException e) {
          e.printStackTrace();
        }
        catch (BrokenBarrierException e) {
          e.printStackTrace();
        }
      }
    };
    final Thread t1 = new Thread() {
      public void run() {
        try {
          int _z = 0;
          await(cc);
          _z = x;
          await(cb);
          await(cc);
          await(cb);
        }
        catch (InterruptedException e) {
          e.printStackTrace();
        }
        catch (BrokenBarrierException e) {
          e.printStackTrace();
        }
      }
    };
    t1.start();
    t2.start();
  }
}